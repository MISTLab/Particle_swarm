
prop_stig = {}
Prop_id = 1
prop_val = 0
time_step = 0
exp_done = 0
value_num_of_conflicts = 0
robot_num_of_conflicts = 0
time_to_update_stigmergy = 200
number_of_value_to_end = 10
GUIDE_START_ID = 9000

function init(){
	# Stigmergy to advertise bugs requiring transport.
	prop_stig = stigmergy.create(201)
	prop_stig.onconflict(conflict_function)
}

function step(){

	var stig_value = prop_stig.get(Prop_id)
	if( id >= GUIDE_START_ID ){
		if((not time_step%time_to_update_stigmergy) or 
		   stig_value != prop_val){
			if(not time_step%time_to_update_stigmergy){
				prop_val = prop_val + 1
			}
			prop_stig.put(Prop_id, prop_val)
			log("[",id,"] updating stigmergy ", prop_val)

		}
	}

	if( (not isnil(stig_value)) and stig_value >= number_of_value_to_end){
		exp_done = 1
	}

	time_step = time_step + 1

}


function conflict_function(k, local, remote) {
	if(remote.data != local.data){
		value_num_of_conflicts = value_num_of_conflicts +1
	}
	else if(remote.robot != local.robot){
		robot_num_of_conflicts = robot_num_of_conflicts + 1
	}
	
	if(remote.data >= local.data) return remote 
	else return local
}