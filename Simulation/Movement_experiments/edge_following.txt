-----------------------------------------------------------------------
Algorithm 1 Edge following algorithm. Current distance (d),
current neighbor ($N_c$), old neighbor ($N_o$), and current edge (E).
-----------------------------------------------------------------------
1:  d=0, $N_c$=0, $N_o$=0
2:  Last_seen = circular_buffer(10)
3:  step loop():
4:      Yield = false
5:      for each j $\in N_i$ do
6:          if $\angle x_j < \frac{\pi}{4} $ and $j \in R^G_i$ then
7:              Yield = true
8:              break
9:          end if
10:         if not in Last_seen and $d_j$ $<$ d and $j \in R^W_i$ then
11:             $N_c$ = j
12:             E=j
13:             if $N_o$ $\neq$ $N_c$ then
14:                 Last_seen.push back(j)
15:             end if
16:         end if
17:     end for
18:     if not Yield then
19:         move_vec$ =\perp x_{N_c}+ (d_{N_c} - d^e) * x_{N_c}$
20:         goto(move_vec)
21:     else
22:         goto($[0,0]^T$)
23:     end if
24:     $N_o$ = $N_c$